---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
    try {
        const posts = await getCollection('blogs');
        return posts.map(post => {
            const slug = post.slug;
            return {
                params: { slug },
                props: { post },
            };
        });
    } catch (error) {
        console.error("Error generating blog routes:", error);
        return [];
    }
}

const { post } = Astro.props;

// Handle case where post doesn't exist
if (!post) {
    return Astro.redirect('/');
}

const { Content } = await post.render();

function formatDate(date: Date) {
    return date.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });
}
---

<Layout>
    <main class="max-w-4xl mx-auto px-4 py-8">
        <div class="mb-8">
            <a href="/" class="inline-block px-4 py-2 border border-gray-600 rounded-lg hover:text-primary hover:border-primary transition-colors mb-6">
                Back to Home
            </a>
        </div>
        <article class="prose prose-invert max-w-none">
            <div class="mb-8">
                <h1 class="text-4xl font-bold text-white mb-4">
                    {post.data.title}
                </h1>
                <div class="flex items-center gap-4 text-gray-400">
                    <time datetime={post.data.publishDate.toISOString()}>
                        {formatDate(post.data.publishDate)}
                    </time>
                    {post.data.tags && (
                        <div class="flex gap-2">
                            {post.data.tags.map(tag => (
                                <span class="px-2 py-1 bg-gray-800 rounded-full text-sm">
                                    {tag}
                                </span>
                            ))}
                        </div>
                    )}
                </div>
            </div>
            <Content />
        </article>
    </main>
</Layout>

<style>
    .prose {
        @apply prose-headings:text-white prose-a:text-primary hover:prose-a:underline prose-strong:text-white;
    }
</style>
